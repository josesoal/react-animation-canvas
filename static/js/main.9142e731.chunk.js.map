{"version":3,"sources":["Ball.js","App.js","index.js"],"names":["Ball","ctx","x","y","speedX","speedY","color","size","this","beginPath","fillStyle","arc","Math","PI","fill","width","height","balls","j","length","dx","dy","sqrt","red","random","green","blue","min","max","floor","App","loop","fillRect","ball","push","i","draw","update","collisionDetect","requestAnimationFrame","canvas","refs","getContext","window","innerWidth","innerHeight","ref","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAqDeA,E,WApDb,WAAYC,EAAKC,EAAGC,EAAGC,EAAQC,EAAQC,EAAOC,GAAO,oBACnDC,KAAKP,IAAMA,EACXO,KAAKN,EAAIA,EACTM,KAAKL,EAAIA,EACTK,KAAKJ,OAASA,EACdI,KAAKH,OAASA,EACdG,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,E,mDAIZC,KAAKP,IAAIQ,YACTD,KAAKP,IAAIS,UAAYF,KAAKF,MAC1BE,KAAKP,IAAIU,IAAIH,KAAKN,EAAGM,KAAKL,EAAGK,KAAKD,KAAM,EAAG,EAAIK,KAAKC,IACpDL,KAAKP,IAAIa,S,6BAGJC,EAAOC,GAEZR,KAAKN,EAAIM,KAAKD,MAAQQ,IAAUP,KAAKJ,QAAUI,KAAKJ,QACpDI,KAAKN,EAAIM,KAAKD,MAAQ,IAAMC,KAAKJ,QAAUI,KAAKJ,QAChDI,KAAKL,EAAIK,KAAKD,MAAQS,IAAWR,KAAKH,QAAUG,KAAKH,QACrDG,KAAKL,EAAIK,KAAKD,MAAQ,IAAMC,KAAKH,QAAUG,KAAKH,QAEhDG,KAAKN,GAAKM,KAAKJ,OACfI,KAAKL,GAAKK,KAAKH,S,sCAGDY,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAChC,GAAIV,OAASS,EAAMC,GAAI,CACrB,IAAME,EAAKZ,KAAKN,EAAIe,EAAMC,GAAGhB,EACvBmB,EAAKb,KAAKL,EAAIc,EAAMC,GAAGf,EAG7B,GAFiBS,KAAKU,KAAKF,EAAKA,EAAKC,EAAKA,GAE3Bb,KAAKD,KAAOU,EAAMC,GAAGX,KAAM,CACxC,IAAMgB,EAAMf,KAAKgB,OAAO,EAAG,KACrBC,EAAQjB,KAAKgB,OAAO,EAAG,KACvBE,EAAOlB,KAAKgB,OAAO,EAAG,KAE5BP,EAAMC,GAAGZ,MAAQE,KAAKF,MACpB,OAASiB,EAAM,IAAME,EAAQ,IAAMC,EAAO,Q,6BAM7CC,EAAKC,GACV,OAAOhB,KAAKiB,MAAMjB,KAAKY,UAAYI,EAAMD,IAAQA,M,KCqBtCG,E,kDAlEb,aAAe,IAAD,8BACZ,gBAUFC,KAAO,WAIL,IAHA,EAAK9B,IAAIS,UAAY,sBACrB,EAAKT,IAAI+B,SAAS,EAAG,EAAG,EAAKjB,MAAO,EAAKC,QAElC,EAAKC,MAAME,OAAS,IAAI,CAC7B,IAAMZ,EAAO,EAAKiB,OAAO,GAAI,IACvBtB,EAAI,EAAKsB,OAAO,EAAIjB,EAAM,EAAKQ,MAAQR,GACvCJ,EAAI,EAAKqB,OAAO,EAAIjB,EAAM,EAAKS,OAAST,GACxCH,EAAS,EAAKoB,QAAQ,EAAG,GACzBnB,EAAS,EAAKmB,QAAQ,EAAG,GACzBD,EAAM,EAAKC,OAAO,EAAG,KACrBC,EAAQ,EAAKD,OAAO,EAAG,KACvBE,EAAO,EAAKF,OAAO,EAAG,KAEtBS,EAAO,IAAIjC,EACf,EAAKC,IAAKC,EAAGC,EAAGC,EAAQC,EACxB,OAASkB,EAAM,IAAME,EAAQ,IAAMC,EAAO,IAC1CnB,GAEF,EAAKU,MAAMiB,KAAKD,GAGlB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKlB,MAAME,OAAQgB,IACrC,EAAKlB,MAAMkB,GAAGC,OACd,EAAKnB,MAAMkB,GAAGE,OAAO,EAAKtB,MAAO,EAAKC,QACtC,EAAKC,MAAMkB,GAAGG,gBAAgB,EAAKrB,OAGrCsB,sBAAsB,EAAKR,OArC3B,EAAKS,OAAS,KACd,EAAKvC,IAAM,KAEX,EAAKc,MAAQ,KACb,EAAKC,OAAS,KAEd,EAAKC,MAAQ,GARD,E,mDA0CPU,EAAKC,GACV,OAAOhB,KAAKiB,MAAMjB,KAAKY,UAAYI,EAAMD,IAAQA,I,0CAKjDnB,KAAKgC,OAAShC,KAAKiC,KAAKD,OACxBhC,KAAKP,IAAMO,KAAKgC,OAAOE,WAAW,MAClClC,KAAKO,MAAQP,KAAKgC,OAAOzB,MAAQ4B,OAAOC,WACxCpC,KAAKQ,OAASR,KAAKgC,OAAOxB,OAAS2B,OAAOE,YAE1CrC,KAAKuB,S,+BAIL,OACE,6BACE,oDACA,4BAAQe,IAAI,SAAS/B,MAAO,IAAKC,OAAQ,W,GA7D/B+B,IAAMC,WCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9142e731.chunk.js","sourcesContent":["class Ball {\n  constructor(ctx, x, y, speedX, speedY, color, size) {\n    this.ctx = ctx;\n    this.x = x; //horizontal position\n    this.y = y; //vertical position\n    this.speedX = speedX;\n    this.speedY = speedY;\n    this.color = color;\n    this.size = size;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n\n  update(width, height) {\n    //change orientation if necessary\n    this.x + this.size >= width && (this.speedX = -this.speedX);\n    this.x - this.size <= 0 && (this.speedX = -this.speedX);\n    this.y + this.size >= height && (this.speedY = -this.speedY);\n    this.y - this.size <= 0 && (this.speedY = -this.speedY);\n    //update position\n    this.x += this.speedX;\n    this.y += this.speedY;\n  }\n\n  collisionDetect(balls) {\n    for (let j = 0; j < balls.length; j++) {\n      if (this !== balls[j]) {\n        const dx = this.x - balls[j].x;\n        const dy = this.y - balls[j].y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < this.size + balls[j].size) {\n          const red = this.random(0, 255);\n          const green = this.random(0, 255);\n          const blue = this.random(0, 255);\n\n          balls[j].color = this.color =\n            \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n        }\n      }\n    }\n  }\n\n  random(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n}\n\nexport default Ball;\n","import React from \"react\";\nimport Ball from \"./Ball\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.canvas = null;\n    this.ctx = null;\n\n    this.width = null;\n    this.height = null;\n\n    this.balls = [];\n  }\n\n  loop = () => {\n    this.ctx.fillStyle = \"rgba(0, 0, 0, 0.25)\"; //canvas filling color\n    this.ctx.fillRect(0, 0, this.width, this.height); //apply filling color\n\n    while (this.balls.length < 25) {\n      const size = this.random(10, 20);\n      const x = this.random(0 + size, this.width - size);\n      const y = this.random(0 + size, this.height - size);\n      const speedX = this.random(-7, 7);\n      const speedY = this.random(-7, 7);\n      const red = this.random(0, 255);\n      const green = this.random(0, 255);\n      const blue = this.random(0, 255);\n\n      const ball = new Ball(\n        this.ctx, x, y, speedX, speedY,\n        \"rgb(\" + red + \",\" + green + \",\" + blue + \")\",\n        size\n      );\n      this.balls.push(ball);\n    }\n\n    for (let i = 0; i < this.balls.length; i++) {\n      this.balls[i].draw();\n      this.balls[i].update(this.width, this.height);\n      this.balls[i].collisionDetect(this.balls);\n    }\n\n    requestAnimationFrame(this.loop);\n  };\n\n  random(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  componentDidMount() {\n    //set up the canvas\n    this.canvas = this.refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.width = this.canvas.width = window.innerWidth;\n    this.height = this.canvas.height = window.innerHeight;\n    //start the animation\n    this.loop();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>React bouncing balls</h1>\n        <canvas ref=\"canvas\" width={640} height={425} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}